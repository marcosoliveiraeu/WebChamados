{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrador\\\\Documents\\\\GitHub\\\\WebChamados\\\\WebChamados\\\\React\\\\chamadosreact\\\\src\\\\components\\\\LoginForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './LoginForm.css';\nimport { useNavigate } from 'react-router-dom';\nimport { jwtDecode } from 'jwt-decode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginForm = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  const [emailHistory, setEmailHistory] = useState([]);\n  useEffect(() => {\n    handleLogin();\n\n    // Carrega o histórico de emails do localStorage\n    const savedEmails = JSON.parse(localStorage.getItem('emailHistory')) || [];\n    setEmailHistory(savedEmails);\n  }, []);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post('https://localhost:7137/api/Usuario/Login', {\n        email,\n        password\n      });\n      if (response.data.flag) {\n        localStorage.setItem('accessToken', response.data.accessToken);\n        localStorage.setItem('refreshToken', response.data.refreshToken);\n        const updatedEmailHistory = [...new Set([email, ...emailHistory])];\n        setEmailHistory(updatedEmailHistory);\n        localStorage.setItem('emailHistory', JSON.stringify(updatedEmailHistory));\n        navigate('/chamados');\n      } else {\n        // Se não, exiba a mensagem de erro\n        setError(response.data.message);\n      }\n    } catch (error) {\n      console.error('Erro de login:', error);\n      setError('Erro ao efetuar o login. Por favor, tente novamente.');\n    }\n  };\n  const checkAccessTokenValidity = async () => {\n    const accessToken = localStorage.getItem('accessToken');\n    if (!accessToken) {\n      return false; // Sem accessToken, usuário precisa fazer login\n    }\n    const decodedToken = jwtDecode(accessToken);\n    if (decodedToken.exp < Date.now() / 1000) {\n      // AccessToken expirado, tentar atualizar com refreshToken\n      const refreshToken = localStorage.getItem('refreshToken');\n      if (!refreshToken) {\n        return false; // refreshToken também expirado, usuário precisa fazer login\n      }\n      try {\n        const refreshResponse = await axios.post('https://localhost:7137/api/Usuario/Refresh', {\n          refreshToken\n        });\n        if (refreshResponse.data.flag) {\n          const {\n            accessToken: newAccessToken,\n            refreshToken: newRefreshToken\n          } = refreshResponse.data;\n          localStorage.setItem('accessToken', newAccessToken);\n          localStorage.setItem('refreshToken', newRefreshToken);\n          return true; // Tokens atualizados com sucesso\n        } else {\n          return false; // Falha ao atualizar AccessToken\n        }\n      } catch (error) {\n        console.error('Erro ao atualizar AccessToken:', error);\n        return false; // Erro ao atualizar AccessToken\n      }\n    }\n    return true; // AccessToken ainda é válido\n  };\n  const handleLogin = async () => {\n    const accessTokenIsValid = await checkAccessTokenValidity();\n    if (accessTokenIsValid) {\n      navigate('/chamados');\n    } else {\n      setError('Sua sessão expirou. Por favor, faça login novamente.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"formContainer\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"formBox\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"appName\",\n        children: \"WebChamados\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 58\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"telaLogin\",\n        children: \"Fazer login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          list: \"emailHistory\",\n          placeholder: \"Email\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n          id: \"emailHistory\",\n          children: emailHistory.map((email, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: email\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 57\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Senha\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Fazer login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"forgotPassword\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"divider\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          children: \"Esqueceu sua senha?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginForm, \"ngpLT5AC/j1NRbbb14+WVAb5D1k=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","jwtDecode","jsxDEV","_jsxDEV","LoginForm","_s","email","setEmail","password","setPassword","error","setError","navigate","emailHistory","setEmailHistory","handleLogin","savedEmails","JSON","parse","localStorage","getItem","handleSubmit","e","preventDefault","response","post","data","flag","setItem","accessToken","refreshToken","updatedEmailHistory","Set","stringify","message","console","checkAccessTokenValidity","decodedToken","exp","Date","now","refreshResponse","newAccessToken","newRefreshToken","accessTokenIsValid","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","list","placeholder","value","onChange","target","id","map","index","href","_c","$RefreshReg$"],"sources":["C:/Users/Administrador/Documents/GitHub/WebChamados/WebChamados/React/chamadosreact/src/components/LoginForm.jsx"],"sourcesContent":["import React, { useState , useEffect  } from 'react';\r\nimport axios from 'axios';\r\nimport './LoginForm.css';\r\nimport { useNavigate  } from 'react-router-dom';\r\nimport { jwtDecode } from 'jwt-decode';\r\n\r\n\r\nconst LoginForm = () => {\r\n    \r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n  const navigate = useNavigate(); \r\n  const [emailHistory, setEmailHistory] = useState([]);\r\n\r\n  useEffect(() => {\r\n        \r\n    handleLogin();\r\n\r\n    // Carrega o histórico de emails do localStorage\r\n    const savedEmails = JSON.parse(localStorage.getItem('emailHistory')) || [];\r\n    setEmailHistory(savedEmails);\r\n  }, []);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await axios.post('https://localhost:7137/api/Usuario/Login', {\r\n        email,\r\n        password,\r\n      });\r\n\r\n      \r\n      if (response.data.flag) {\r\n        \r\n        localStorage.setItem('accessToken', response.data.accessToken);\r\n        localStorage.setItem('refreshToken', response.data.refreshToken);\r\n\r\n        const updatedEmailHistory = [...new Set([email, ...emailHistory])];\r\n        setEmailHistory(updatedEmailHistory);\r\n        localStorage.setItem('emailHistory', JSON.stringify(updatedEmailHistory));\r\n\r\n\r\n        navigate('/chamados');\r\n\r\n      } else {\r\n        // Se não, exiba a mensagem de erro\r\n        setError(response.data.message);\r\n      }\r\n    } catch (error) {\r\n        console.error('Erro de login:', error);\r\n        setError('Erro ao efetuar o login. Por favor, tente novamente.');\r\n    }\r\n  };\r\n\r\n  const checkAccessTokenValidity = async () => {\r\n    const accessToken = localStorage.getItem('accessToken');\r\n    if (!accessToken) {\r\n      return false; // Sem accessToken, usuário precisa fazer login\r\n    }\r\n  \r\n    const decodedToken = jwtDecode(accessToken);\r\n    if (decodedToken.exp < Date.now() / 1000) {\r\n      // AccessToken expirado, tentar atualizar com refreshToken\r\n      const refreshToken = localStorage.getItem('refreshToken');\r\n      if (!refreshToken) {\r\n        return false; // refreshToken também expirado, usuário precisa fazer login\r\n      }\r\n  \r\n      try {\r\n        const refreshResponse = await axios.post('https://localhost:7137/api/Usuario/Refresh', {\r\n          refreshToken,\r\n        });\r\n  \r\n        if (refreshResponse.data.flag) {\r\n          const { accessToken: newAccessToken, refreshToken: newRefreshToken } = refreshResponse.data;\r\n          localStorage.setItem('accessToken', newAccessToken);\r\n          localStorage.setItem('refreshToken', newRefreshToken);\r\n          return true; // Tokens atualizados com sucesso\r\n        } else {\r\n          return false; // Falha ao atualizar AccessToken\r\n        }\r\n      } catch (error) {\r\n        console.error('Erro ao atualizar AccessToken:', error);\r\n        return false; // Erro ao atualizar AccessToken\r\n      }\r\n    }\r\n  \r\n    return true; // AccessToken ainda é válido\r\n  };\r\n\r\n\r\n  const handleLogin = async () => {\r\n    const accessTokenIsValid = await checkAccessTokenValidity();\r\n    if (accessTokenIsValid) {\r\n      navigate('/chamados');\r\n    } else {\r\n      setError('Sua sessão expirou. Por favor, faça login novamente.');\r\n    }\r\n  };\r\n\r\n  \r\n  return (\r\n    <div className=\"formContainer\">\r\n        <div className=\"formBox\">\r\n            <span className=\"appName\" >WebChamados</span><br />\r\n            <span className=\"telaLogin\">Fazer login</span>\r\n            {error && <p className=\"error\">{error}</p>} \r\n            <form onSubmit={handleSubmit}>\r\n                <input type=\"email\" list=\"emailHistory\" placeholder='Email' value={email} onChange={(e) => setEmail(e.target.value)}/>\r\n                <datalist id=\"emailHistory\">\r\n                  {emailHistory.map((email, index) => ( <option key={index} value={email} /> ))}\r\n                </datalist>\r\n                <input type=\"password\" placeholder='Senha'  value={password} onChange={(e) => setPassword(e.target.value)}/>\r\n                \r\n                {/* <div className=\"rememberMe\">\r\n                  <input type=\"checkbox\" id=\"rememberMe\" />\r\n                  <label htmlFor=\"rememberMe\">Lembrar-me</label>\r\n                </div> */}\r\n                \r\n                <button type=\"submit\">Fazer login</button>\r\n            </form>\r\n            <div className=\"forgotPassword\">\r\n                <div className=\"divider\"></div>\r\n                <a href=\"#\">Esqueceu sua senha?</a>                \r\n            </div>            \r\n        </div>\r\n    </div>\r\n  );\r\n\r\n};\r\n\r\nexport default LoginForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}