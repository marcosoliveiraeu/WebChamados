{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrador\\\\Documents\\\\GitHub\\\\WebChamados\\\\WebChamados\\\\React\\\\chamadosreact\\\\src\\\\components\\\\UserContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { jwtDecode } from 'jwt-decode';\nimport axios from 'axios';\n//import { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserContext = /*#__PURE__*/createContext();\nexport const UserProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [tokenExpired, setTokenExpired] = useState(false);\n\n  //const navigate = useNavigate();\n\n  useEffect(async () => {\n    const token = localStorage.getItem('accessToken');\n    const refreshToken = localStorage.getItem('refreshToken');\n    if (token) {\n      const decodedToken = jwtDecode(token);\n      const currentTime = Date.now() / 1000;\n      if (decodedToken.exp < currentTime) {\n        //token expirado , verifica o refresh\n        const refreshResponse = await axios.post('https://localhost:7137/api/Usuario/Refresh', {\n          refreshToken\n        });\n        if (refreshResponse.data.flag) {\n          const {\n            accessToken: newAccessToken,\n            refreshToken: newRefreshToken\n          } = refreshResponse.data;\n          localStorage.setItem('accessToken', newAccessToken);\n          localStorage.setItem('refreshToken', newRefreshToken);\n          decodedToken = jwtDecode(newAccessToken);\n          setUser({\n            name: decodedToken['http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name'],\n            email: decodedToken['http://schemas.xmlsoap.org/ws/2005/05/identity/claims/emailaddress'],\n            role: decodedToken['http://schemas.microsoft.com/ws/2008/06/identity/claims/role'],\n            exp: decodedToken.exp\n          });\n        } else {\n          setUser(null);\n          setTokenExpired(true);\n          //navigate('/login');\n        }\n      } else {\n        setUser({\n          name: decodedToken['http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name'],\n          email: decodedToken['http://schemas.xmlsoap.org/ws/2005/05/identity/claims/emailaddress'],\n          role: decodedToken['http://schemas.microsoft.com/ws/2008/06/identity/claims/role'],\n          exp: decodedToken.exp\n        });\n      }\n    } else {\n      setUser(null);\n      setTokenExpired(true);\n      //navigate('/login');\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      user,\n      tokenExpired\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(UserProvider, \"QExyTfw3y/BBhoC9xix65+5lyuc=\");\n_c = UserProvider;\nexport const useUser = () => {\n  _s2();\n  return useContext(UserContext);\n};\n_s2(useUser, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","jwtDecode","axios","jsxDEV","_jsxDEV","UserContext","UserProvider","children","_s","user","setUser","tokenExpired","setTokenExpired","token","localStorage","getItem","refreshToken","decodedToken","currentTime","Date","now","exp","refreshResponse","post","data","flag","accessToken","newAccessToken","newRefreshToken","setItem","name","email","role","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useUser","_s2","$RefreshReg$"],"sources":["C:/Users/Administrador/Documents/GitHub/WebChamados/WebChamados/React/chamadosreact/src/components/UserContext.jsx"],"sourcesContent":["\r\nimport React, { createContext, useState, useContext, useEffect } from 'react';\r\nimport { jwtDecode } from 'jwt-decode';\r\nimport axios from 'axios';\r\n//import { useNavigate } from 'react-router-dom';\r\n\r\nconst UserContext = createContext();\r\n\r\nexport const UserProvider = ({ children }) => {\r\n    \r\n  const [user, setUser] = useState(null);\r\n  const [tokenExpired, setTokenExpired] = useState(false);\r\n\r\n  //const navigate = useNavigate();\r\n\r\n\r\n  useEffect(async () => {\r\n    const token = localStorage.getItem('accessToken');\r\n    const refreshToken = localStorage.getItem('refreshToken');\r\n\r\n    if (token) {\r\n      const decodedToken = jwtDecode(token);\r\n      const currentTime = Date.now() / 1000;\r\n\r\n      if (decodedToken.exp < currentTime) {\r\n\r\n        //token expirado , verifica o refresh\r\n        const refreshResponse = await axios.post('https://localhost:7137/api/Usuario/Refresh', { refreshToken, });\r\n        \r\n        if (refreshResponse.data.flag) {\r\n            const { accessToken: newAccessToken, refreshToken: newRefreshToken } = refreshResponse.data;\r\n            localStorage.setItem('accessToken', newAccessToken);\r\n            localStorage.setItem('refreshToken', newRefreshToken);\r\n            \r\n            decodedToken = jwtDecode(newAccessToken);\r\n            \r\n            setUser({\r\n                name: decodedToken['http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name'],\r\n                email: decodedToken['http://schemas.xmlsoap.org/ws/2005/05/identity/claims/emailaddress'],\r\n                role: decodedToken['http://schemas.microsoft.com/ws/2008/06/identity/claims/role'],\r\n                exp: decodedToken.exp\r\n              });\r\n        }\r\n        else\r\n        {\r\n            setUser(null);\r\n            setTokenExpired(true);\r\n            //navigate('/login');\r\n        }\r\n        \r\n      } \r\n      else \r\n      {\r\n        setUser({\r\n          name: decodedToken['http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name'],\r\n          email: decodedToken['http://schemas.xmlsoap.org/ws/2005/05/identity/claims/emailaddress'],\r\n          role: decodedToken['http://schemas.microsoft.com/ws/2008/06/identity/claims/role'],\r\n          exp: decodedToken.exp\r\n        });\r\n      }\r\n    } else {\r\n      setUser(null);\r\n      setTokenExpired(true);\r\n      //navigate('/login');\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <UserContext.Provider value={{ user, tokenExpired }}>\r\n      {children}\r\n    </UserContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useUser = () => useContext(UserContext);\r\n\r\n"],"mappings":";;;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAC7E,SAASC,SAAS,QAAQ,YAAY;AACtC,OAAOC,KAAK,MAAM,OAAO;AACzB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,WAAW,gBAAGR,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMS,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAE5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACa,YAAY,EAAEC,eAAe,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;;EAEvD;;EAGAE,SAAS,CAAC,YAAY;IACpB,MAAMa,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;IACjD,MAAMC,YAAY,GAAGF,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;IAEzD,IAAIF,KAAK,EAAE;MACT,MAAMI,YAAY,GAAGhB,SAAS,CAACY,KAAK,CAAC;MACrC,MAAMK,WAAW,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,IAAI;MAErC,IAAIH,YAAY,CAACI,GAAG,GAAGH,WAAW,EAAE;QAElC;QACA,MAAMI,eAAe,GAAG,MAAMpB,KAAK,CAACqB,IAAI,CAAC,4CAA4C,EAAE;UAAEP;QAAc,CAAC,CAAC;QAEzG,IAAIM,eAAe,CAACE,IAAI,CAACC,IAAI,EAAE;UAC3B,MAAM;YAAEC,WAAW,EAAEC,cAAc;YAAEX,YAAY,EAAEY;UAAgB,CAAC,GAAGN,eAAe,CAACE,IAAI;UAC3FV,YAAY,CAACe,OAAO,CAAC,aAAa,EAAEF,cAAc,CAAC;UACnDb,YAAY,CAACe,OAAO,CAAC,cAAc,EAAED,eAAe,CAAC;UAErDX,YAAY,GAAGhB,SAAS,CAAC0B,cAAc,CAAC;UAExCjB,OAAO,CAAC;YACJoB,IAAI,EAAEb,YAAY,CAAC,4DAA4D,CAAC;YAChFc,KAAK,EAAEd,YAAY,CAAC,oEAAoE,CAAC;YACzFe,IAAI,EAAEf,YAAY,CAAC,8DAA8D,CAAC;YAClFI,GAAG,EAAEJ,YAAY,CAACI;UACpB,CAAC,CAAC;QACR,CAAC,MAED;UACIX,OAAO,CAAC,IAAI,CAAC;UACbE,eAAe,CAAC,IAAI,CAAC;UACrB;QACJ;MAEF,CAAC,MAED;QACEF,OAAO,CAAC;UACNoB,IAAI,EAAEb,YAAY,CAAC,4DAA4D,CAAC;UAChFc,KAAK,EAAEd,YAAY,CAAC,oEAAoE,CAAC;UACzFe,IAAI,EAAEf,YAAY,CAAC,8DAA8D,CAAC;UAClFI,GAAG,EAAEJ,YAAY,CAACI;QACpB,CAAC,CAAC;MACJ;IACF,CAAC,MAAM;MACLX,OAAO,CAAC,IAAI,CAAC;MACbE,eAAe,CAAC,IAAI,CAAC;MACrB;IACF;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,oBACER,OAAA,CAACC,WAAW,CAAC4B,QAAQ;IAACC,KAAK,EAAE;MAAEzB,IAAI;MAAEE;IAAa,CAAE;IAAAJ,QAAA,EACjDA;EAAQ;IAAA4B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAC9B,EAAA,CAhEWF,YAAY;AAAAiC,EAAA,GAAZjC,YAAY;AAkEzB,OAAO,MAAMkC,OAAO,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAM1C,UAAU,CAACM,WAAW,CAAC;AAAA;AAACoC,GAAA,CAAxCD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}