{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrador\\\\Documents\\\\GitHub\\\\WebChamados\\\\WebChamados\\\\React\\\\chamadosreact\\\\src\\\\components\\\\LoginForm.jsx\";\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginForm = () => {\n  /*  \r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n    const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await axios.post('URL_DA_SUA_API_PARA_LOGIN', {\r\n        username,\r\n        password,\r\n      });\r\n      // Armazene os tokens JWT recebidos no local storage ou em um estado global (ex: Redux)\r\n    } catch (error) {\r\n      console.error('Erro de login:', error);\r\n    }\r\n  };\r\n    return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input type=\"text\" value={username} onChange={(e) => setUsername(e.target.value)} />\r\n      <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} />\r\n      <button type=\"submit\">Login</button>\r\n    </form>\r\n  );\r\n  */\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: username\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      value: password\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","LoginForm","onSubmit","handleSubmit","children","type","value","username","fileName","_jsxFileName","lineNumber","columnNumber","password","_c","$RefreshReg$"],"sources":["C:/Users/Administrador/Documents/GitHub/WebChamados/WebChamados/React/chamadosreact/src/components/LoginForm.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst LoginForm = () => {\r\n  /*  \r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await axios.post('URL_DA_SUA_API_PARA_LOGIN', {\r\n        username,\r\n        password,\r\n      });\r\n      // Armazene os tokens JWT recebidos no local storage ou em um estado global (ex: Redux)\r\n    } catch (error) {\r\n      console.error('Erro de login:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input type=\"text\" value={username} onChange={(e) => setUsername(e.target.value)} />\r\n      <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} />\r\n      <button type=\"submit\">Login</button>\r\n    </form>\r\n  );\r\n  */\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input type=\"text\" value={username}  />\r\n      <input type=\"password\" value={password}  />\r\n      <button type=\"submit\">Login</button>\r\n    </form>\r\n  );\r\n\r\n};\r\n\r\nexport default LoginForm;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,SAAS,GAAGA,CAAA,KAAM;EACtB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAGE,oBACED,OAAA;IAAME,QAAQ,EAAEC,YAAa;IAAAC,QAAA,gBAC3BJ,OAAA;MAAOK,IAAI,EAAC,MAAM;MAACC,KAAK,EAAEC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACvCX,OAAA;MAAOK,IAAI,EAAC,UAAU;MAACC,KAAK,EAAEM;IAAS;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAC3CX,OAAA;MAAQK,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAK;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChC,CAAC;AAGX,CAAC;AAACE,EAAA,GAlCIZ,SAAS;AAoCf,eAAeA,SAAS;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}