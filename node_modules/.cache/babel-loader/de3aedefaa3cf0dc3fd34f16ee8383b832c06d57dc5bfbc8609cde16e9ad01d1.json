{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrador\\\\Documents\\\\GitHub\\\\WebChamados\\\\WebChamados\\\\React\\\\chamadosreact\\\\src\\\\components\\\\ResetPassword.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useSearchParams, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport API_URL from '../utils/apiConfig';\nimport './css/LoginForm.css';\nimport icon from '../img/icone.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResetPassword = () => {\n  _s();\n  const [searchParams] = useSearchParams();\n  const email = searchParams.get('email');\n  const token = searchParams.get('token');\n  const [senha, setSenha] = useState('');\n  const [confirmarSenha, setconfirmarSenha] = useState('');\n  const [msg, setMsg] = useState('');\n  const [error, setErro] = useState('');\n  const navigate = useNavigate();\n  const baseURL = `${API_URL}/Usuario/ResetSenha`;\n  const ResetSenha = async () => {\n    const userData = {\n      token: token,\n      email: email,\n      newPassword: senha,\n      confirmPassword: confirmarSenha\n    };\n    try {\n      const response = await axios.post(baseURL, userData);\n      if (response.status === 200) {\n        setMsg(\"Senha alterada com sucesso. <a href='/login'>Clique aqui para fazer login.</a>\");\n      } else {\n        setErro(\"Erro ao alterar senha.\");\n      }\n    } catch (err) {\n      setErro('Erro ao alterar senha: ' + err);\n    }\n  };\n  const handlePasswordReset = event => {\n    event.preventDefault();\n    setErro(null);\n    setMsg(null);\n    if (validaCampos()) {\n      ResetSenha();\n    }\n  };\n  const validaCampos = () => {\n    if (!senha || !confirmarSenha) {\n      setErro('Todos os campos são obrigatórios.');\n      return false;\n    }\n    if (senha.length < 5) {\n      setErro('A senha deve ter no mínimo 5 caracteres.');\n      return false;\n    }\n    if (senha !== confirmarSenha) {\n      setErro('As senhas não coincidem.');\n      return false;\n    }\n    if (!token || !email) {\n      setErro('Essa funcionalidade deve ser acessada pelo link fornecido no email.');\n      return false;\n    }\n    if (!validatePassword(senha)) {\n      setErro('A senha deve ter pelo menos 5 caracteres, incluindo letras maiúsculas, minúsculas, números e caracteres especiais.');\n      return false;\n    }\n    return true;\n  };\n  const validatePassword = password => {\n    const re = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[!@#$%^&*])[A-Za-z\\d!@#$%^&*]{5,}$/;\n    return re.test(password);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"formContainer\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"formBox\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: icon,\n        alt: \"WebChamados\",\n        className: \"icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"appName\",\n        children: \"WebChamados\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 58\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"telaLogin\",\n        children: \"Redefinir Senha\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }, this), msg && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-success\",\n        children: msg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"submitPasswordReset\",\n        onSubmit: handlePasswordReset,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group \",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Nova senha\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            className: \"form-control\",\n            id: \"password\",\n            value: senha,\n            onChange: e => setSenha(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"confirmPassword\",\n            children: \"Confirma\\xE7\\xE3o nova senha\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            className: \"form-control\",\n            id: \"confirmPassword\",\n            value: confirmarSenha,\n            onChange: e => setconfirmarSenha(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          children: \"Redefinir Senha\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n_s(ResetPassword, \"DOn0IIuAoDT9fUJUldVY8y5EcNU=\", false, function () {\n  return [useSearchParams, useNavigate];\n});\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","useSearchParams","useNavigate","axios","API_URL","icon","jsxDEV","_jsxDEV","ResetPassword","_s","searchParams","email","get","token","senha","setSenha","confirmarSenha","setconfirmarSenha","msg","setMsg","error","setErro","navigate","baseURL","ResetSenha","userData","newPassword","confirmPassword","response","post","status","err","handlePasswordReset","event","preventDefault","validaCampos","length","validatePassword","password","re","test","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","e","target","required","_c","$RefreshReg$"],"sources":["C:/Users/Administrador/Documents/GitHub/WebChamados/WebChamados/React/chamadosreact/src/components/ResetPassword.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useSearchParams, useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport API_URL from '../utils/apiConfig';\r\nimport './css/LoginForm.css';\r\nimport icon from '../img/icone.png';\r\n\r\nconst ResetPassword = () => {\r\n  const [searchParams] = useSearchParams();\r\n  const email = searchParams.get('email');\r\n  const token = searchParams.get('token');\r\n  const [senha, setSenha] = useState('');\r\n  const [confirmarSenha, setconfirmarSenha] = useState('');\r\n  const [msg, setMsg] = useState('');\r\n  const [error, setErro] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const baseURL = `${API_URL}/Usuario/ResetSenha`;\r\n\r\n  const ResetSenha = async () => {\r\n    \r\n    const userData = {\r\n        token: token,\r\n        email: email,\r\n        newPassword: senha,\r\n        confirmPassword: confirmarSenha\r\n      };\r\n    \r\n\r\n    try {\r\n      const response = await axios.post(baseURL, userData);\r\n\r\n      if (response.status === 200) {        \r\n        setMsg(\"Senha alterada com sucesso. <a href='/login'>Clique aqui para fazer login.</a>\");          \r\n      }else{\r\n        setErro(\"Erro ao alterar senha.\");\r\n        \r\n      }\r\n    } catch (err) {\r\n      setErro('Erro ao alterar senha: ' + err);\r\n    }\r\n  };\r\n\r\n  const handlePasswordReset = (event) => {\r\n    event.preventDefault();\r\n\r\n    setErro(null);\r\n    setMsg(null);\r\n\r\n    if(validaCampos()) {\r\n        ResetSenha();\r\n    }    \r\n  };\r\n\r\n  \r\n  const validaCampos = () => {\r\n    \r\n    if (!senha || !confirmarSenha ) {\r\n      setErro('Todos os campos são obrigatórios.');\r\n      return false;\r\n    }\r\n    if (senha.length < 5) {\r\n      setErro('A senha deve ter no mínimo 5 caracteres.');\r\n      return false;\r\n    }\r\n    if (senha !== confirmarSenha) {\r\n      setErro('As senhas não coincidem.');\r\n      return false;\r\n    }\r\n\r\n    if (!token || !email) {\r\n        setErro('Essa funcionalidade deve ser acessada pelo link fornecido no email.');\r\n        return false;\r\n      }\r\n\r\n\r\n    if (!validatePassword(senha)) {\r\n      setErro('A senha deve ter pelo menos 5 caracteres, incluindo letras maiúsculas, minúsculas, números e caracteres especiais.');\r\n      return false;\r\n    }\r\n    \r\n    return true ;\r\n\r\n  }\r\n\r\n\r\n  const validatePassword = (password) => {\r\n    const re = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[!@#$%^&*])[A-Za-z\\d!@#$%^&*]{5,}$/;\r\n    return re.test(password);\r\n  };\r\n\r\n  return (\r\n    <div className=\"formContainer\">\r\n        <div className=\"formBox\">\r\n            <img src={icon} alt=\"WebChamados\" className=\"icon\" />\r\n            <span className=\"appName\" >WebChamados</span><br />\r\n            <span className=\"telaLogin\">Redefinir Senha</span>\r\n            {msg && <div className=\"alert alert-success\">{msg}</div>}\r\n            {error && <div className=\"alert alert-danger\">{error}</div>}\r\n            <form className= \"submitPasswordReset\" onSubmit={handlePasswordReset}>\r\n                <div className=\"form-group \">\r\n                    <label htmlFor=\"password\" >Nova senha</label>\r\n                    <input\r\n                        type=\"password\"\r\n                        className=\"form-control\"\r\n                        id=\"password\"\r\n                        value={senha}\r\n                        onChange={(e) => setSenha(e.target.value)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"confirmPassword\">Confirmação nova senha</label>\r\n                    <input\r\n                        type=\"password\"\r\n                        className=\"form-control\"\r\n                        id=\"confirmPassword\"\r\n                        value={confirmarSenha}\r\n                        onChange={(e) => setconfirmarSenha(e.target.value)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-primary\">Redefinir Senha</button>\r\n            </form>\r\n        </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResetPassword;\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,eAAe,EAAEC,WAAW,QAAQ,kBAAkB;AAC/D,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,oBAAoB;AACxC,OAAO,qBAAqB;AAC5B,OAAOC,IAAI,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,YAAY,CAAC,GAAGT,eAAe,CAAC,CAAC;EACxC,MAAMU,KAAK,GAAGD,YAAY,CAACE,GAAG,CAAC,OAAO,CAAC;EACvC,MAAMC,KAAK,GAAGH,YAAY,CAACE,GAAG,CAAC,OAAO,CAAC;EACvC,MAAM,CAACE,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACgB,cAAc,EAAEC,iBAAiB,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACkB,GAAG,EAAEC,MAAM,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAM,CAACoB,KAAK,EAAEC,OAAO,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EACrC,MAAMsB,QAAQ,GAAGpB,WAAW,CAAC,CAAC;EAE9B,MAAMqB,OAAO,GAAI,GAAEnB,OAAQ,qBAAoB;EAE/C,MAAMoB,UAAU,GAAG,MAAAA,CAAA,KAAY;IAE7B,MAAMC,QAAQ,GAAG;MACbZ,KAAK,EAAEA,KAAK;MACZF,KAAK,EAAEA,KAAK;MACZe,WAAW,EAAEZ,KAAK;MAClBa,eAAe,EAAEX;IACnB,CAAC;IAGH,IAAI;MACF,MAAMY,QAAQ,GAAG,MAAMzB,KAAK,CAAC0B,IAAI,CAACN,OAAO,EAAEE,QAAQ,CAAC;MAEpD,IAAIG,QAAQ,CAACE,MAAM,KAAK,GAAG,EAAE;QAC3BX,MAAM,CAAC,gFAAgF,CAAC;MAC1F,CAAC,MAAI;QACHE,OAAO,CAAC,wBAAwB,CAAC;MAEnC;IACF,CAAC,CAAC,OAAOU,GAAG,EAAE;MACZV,OAAO,CAAC,yBAAyB,GAAGU,GAAG,CAAC;IAC1C;EACF,CAAC;EAED,MAAMC,mBAAmB,GAAIC,KAAK,IAAK;IACrCA,KAAK,CAACC,cAAc,CAAC,CAAC;IAEtBb,OAAO,CAAC,IAAI,CAAC;IACbF,MAAM,CAAC,IAAI,CAAC;IAEZ,IAAGgB,YAAY,CAAC,CAAC,EAAE;MACfX,UAAU,CAAC,CAAC;IAChB;EACF,CAAC;EAGD,MAAMW,YAAY,GAAGA,CAAA,KAAM;IAEzB,IAAI,CAACrB,KAAK,IAAI,CAACE,cAAc,EAAG;MAC9BK,OAAO,CAAC,mCAAmC,CAAC;MAC5C,OAAO,KAAK;IACd;IACA,IAAIP,KAAK,CAACsB,MAAM,GAAG,CAAC,EAAE;MACpBf,OAAO,CAAC,0CAA0C,CAAC;MACnD,OAAO,KAAK;IACd;IACA,IAAIP,KAAK,KAAKE,cAAc,EAAE;MAC5BK,OAAO,CAAC,0BAA0B,CAAC;MACnC,OAAO,KAAK;IACd;IAEA,IAAI,CAACR,KAAK,IAAI,CAACF,KAAK,EAAE;MAClBU,OAAO,CAAC,qEAAqE,CAAC;MAC9E,OAAO,KAAK;IACd;IAGF,IAAI,CAACgB,gBAAgB,CAACvB,KAAK,CAAC,EAAE;MAC5BO,OAAO,CAAC,oHAAoH,CAAC;MAC7H,OAAO,KAAK;IACd;IAEA,OAAO,IAAI;EAEb,CAAC;EAGD,MAAMgB,gBAAgB,GAAIC,QAAQ,IAAK;IACrC,MAAMC,EAAE,GAAG,wEAAwE;IACnF,OAAOA,EAAE,CAACC,IAAI,CAACF,QAAQ,CAAC;EAC1B,CAAC;EAED,oBACE/B,OAAA;IAAKkC,SAAS,EAAC,eAAe;IAAAC,QAAA,eAC1BnC,OAAA;MAAKkC,SAAS,EAAC,SAAS;MAAAC,QAAA,gBACpBnC,OAAA;QAAKoC,GAAG,EAAEtC,IAAK;QAACuC,GAAG,EAAC,aAAa;QAACH,SAAS,EAAC;MAAM;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACrDzC,OAAA;QAAMkC,SAAS,EAAC,SAAS;QAAAC,QAAA,EAAE;MAAW;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAAAzC,OAAA;QAAAsC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACnDzC,OAAA;QAAMkC,SAAS,EAAC,WAAW;QAAAC,QAAA,EAAC;MAAe;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,EACjD9B,GAAG,iBAAIX,OAAA;QAAKkC,SAAS,EAAC,qBAAqB;QAAAC,QAAA,EAAExB;MAAG;QAAA2B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,EACvD5B,KAAK,iBAAIb,OAAA;QAAKkC,SAAS,EAAC,oBAAoB;QAAAC,QAAA,EAAEtB;MAAK;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAC3DzC,OAAA;QAAMkC,SAAS,EAAE,qBAAqB;QAACQ,QAAQ,EAAEjB,mBAAoB;QAAAU,QAAA,gBACjEnC,OAAA;UAAKkC,SAAS,EAAC,aAAa;UAAAC,QAAA,gBACxBnC,OAAA;YAAO2C,OAAO,EAAC,UAAU;YAAAR,QAAA,EAAE;UAAU;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC7CzC,OAAA;YACI4C,IAAI,EAAC,UAAU;YACfV,SAAS,EAAC,cAAc;YACxBW,EAAE,EAAC,UAAU;YACbC,KAAK,EAAEvC,KAAM;YACbwC,QAAQ,EAAGC,CAAC,IAAKxC,QAAQ,CAACwC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;YAC1CI,QAAQ;UAAA;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACX,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC,eACNzC,OAAA;UAAKkC,SAAS,EAAC,YAAY;UAAAC,QAAA,gBACvBnC,OAAA;YAAO2C,OAAO,EAAC,iBAAiB;YAAAR,QAAA,EAAC;UAAsB;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC/DzC,OAAA;YACI4C,IAAI,EAAC,UAAU;YACfV,SAAS,EAAC,cAAc;YACxBW,EAAE,EAAC,iBAAiB;YACpBC,KAAK,EAAErC,cAAe;YACtBsC,QAAQ,EAAGC,CAAC,IAAKtC,iBAAiB,CAACsC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;YACnDI,QAAQ;UAAA;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACX,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC,eACNzC,OAAA;UAAQ4C,IAAI,EAAC,QAAQ;UAACV,SAAS,EAAC,iBAAiB;UAAAC,QAAA,EAAC;QAAe;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV,CAAC;AAACvC,EAAA,CAxHID,aAAa;EAAA,QACMP,eAAe,EAOrBC,WAAW;AAAA;AAAAwD,EAAA,GARxBlD,aAAa;AA0HnB,eAAeA,aAAa;AAAC,IAAAkD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}