{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport HeaderNavbar from './HeaderNavbar';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport API_URL from '../utils/apiConfig';\nimport getAxiosInstance from '../utils/axiosInstance';\nconst EditarChamado = () => {\n  _s();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const {\n    chamado\n  } = location.state || {};\n  const [id, setId] = useState('');\n  const [titulo, setTitulo] = useState('');\n  const [descricao, setDescricao] = useState('');\n  const [status, setStatus] = useState('');\n  const [responsavel, setResponsavel] = useState('');\n  const [solicitante, setSolicitante] = useState('');\n  const [dtAbertura, setDtAbertura] = useState('');\n  const [dtFechamento, setDtFechamento] = useState('');\n  const [erro, setErro] = useState(null);\n  const [msg, setMsg] = useState(null);\n  const storedToken = localStorage.getItem('accessToken');\n  const baseURL = `${API_URL}/Chamado/EditarChamado`;\n  const axiosInstanceEditarChamado = getAxiosInstance(baseURL, storedToken);\n  useEffect(() => {\n    if (chamado) {\n      setId(chamado.id);\n      setTitulo(chamado.titulo);\n      setDescricao(chamado.descricao);\n      setStatus(chamado.status);\n      setResponsavel(chamado.responsavel);\n      setSolicitante(chamado.solicitante);\n      setDtAbertura(chamado.dtAbertura);\n      setDtFechamento(chamado.dtFechamento);\n    }\n  }, []);\n};\n_s(EditarChamado, \"OCTDV5QOUFJyffk0VPkWFFt/oCw=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = EditarChamado;\nexport default EditarChamado;\nvar _c;\n$RefreshReg$(_c, \"EditarChamado\");","map":{"version":3,"names":["React","useState","useEffect","HeaderNavbar","useLocation","useNavigate","API_URL","getAxiosInstance","EditarChamado","_s","navigate","location","chamado","state","id","setId","titulo","setTitulo","descricao","setDescricao","status","setStatus","responsavel","setResponsavel","solicitante","setSolicitante","dtAbertura","setDtAbertura","dtFechamento","setDtFechamento","erro","setErro","msg","setMsg","storedToken","localStorage","getItem","baseURL","axiosInstanceEditarChamado","_c","$RefreshReg$"],"sources":["C:/Users/Administrador/Documents/GitHub/WebChamados/WebChamados/React/chamadosreact/src/components/EditarChamado.jsx"],"sourcesContent":["import React ,  { useState , useEffect}  from 'react';\r\nimport HeaderNavbar from './HeaderNavbar';\r\nimport { useLocation , useNavigate } from 'react-router-dom';\r\nimport API_URL from '../utils/apiConfig';\r\nimport getAxiosInstance from '../utils/axiosInstance';\r\n\r\nconst EditarChamado = () => {\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    const { chamado } = location.state || {};\r\n    \r\n\r\n    const [id, setId] = useState('');\r\n    const [titulo, setTitulo] = useState('');\r\n    const [descricao, setDescricao] = useState('');\r\n    const [status, setStatus] = useState('');\r\n    const [responsavel, setResponsavel] = useState('');\r\n    const [solicitante, setSolicitante] = useState('');\r\n    const [dtAbertura, setDtAbertura] = useState('');\r\n    const [dtFechamento, setDtFechamento] = useState('');\r\n    const [erro, setErro] = useState(null);\r\n    const [msg, setMsg] = useState(null);\r\n  \r\n    const storedToken = localStorage.getItem('accessToken');\r\n  \r\n    const baseURL = `${API_URL}/Chamado/EditarChamado`;  \r\n    const axiosInstanceEditarChamado = getAxiosInstance(baseURL, storedToken);\r\n  \r\n  \r\n    useEffect(() => {\r\n  \r\n      if (chamado) {\r\n        setId(chamado.id);\r\n        setTitulo(chamado.titulo);\r\n        setDescricao(chamado.descricao);\r\n        setStatus(chamado.status);\r\n        setResponsavel(chamado.responsavel);\r\n        setSolicitante(chamado.solicitante);\r\n        setDtAbertura(chamado.dtAbertura);\r\n        setDtFechamento(chamado.dtFechamento);\r\n  \r\n      }\r\n    }, []);\r\n  \r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport default EditarChamado;"],"mappings":";AAAA,OAAOA,KAAK,IAAMC,QAAQ,EAAGC,SAAS,QAAQ,OAAO;AACrD,OAAOC,YAAY,MAAM,gBAAgB;AACzC,SAASC,WAAW,EAAGC,WAAW,QAAQ,kBAAkB;AAC5D,OAAOC,OAAO,MAAM,oBAAoB;AACxC,OAAOC,gBAAgB,MAAM,wBAAwB;AAErD,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAC9B,MAAMM,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEQ;EAAQ,CAAC,GAAGD,QAAQ,CAACE,KAAK,IAAI,CAAC,CAAC;EAGxC,MAAM,CAACC,EAAE,EAAEC,KAAK,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAChC,MAAM,CAACe,MAAM,EAAEC,SAAS,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACiB,SAAS,EAAEC,YAAY,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACmB,MAAM,EAAEC,SAAS,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACqB,WAAW,EAAEC,cAAc,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACuB,WAAW,EAAEC,cAAc,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACyB,UAAU,EAAEC,aAAa,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAAC2B,YAAY,EAAEC,eAAe,CAAC,GAAG5B,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAAC6B,IAAI,EAAEC,OAAO,CAAC,GAAG9B,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAAC+B,GAAG,EAAEC,MAAM,CAAC,GAAGhC,QAAQ,CAAC,IAAI,CAAC;EAEpC,MAAMiC,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;EAEvD,MAAMC,OAAO,GAAI,GAAE/B,OAAQ,wBAAuB;EAClD,MAAMgC,0BAA0B,GAAG/B,gBAAgB,CAAC8B,OAAO,EAAEH,WAAW,CAAC;EAGzEhC,SAAS,CAAC,MAAM;IAEd,IAAIU,OAAO,EAAE;MACXG,KAAK,CAACH,OAAO,CAACE,EAAE,CAAC;MACjBG,SAAS,CAACL,OAAO,CAACI,MAAM,CAAC;MACzBG,YAAY,CAACP,OAAO,CAACM,SAAS,CAAC;MAC/BG,SAAS,CAACT,OAAO,CAACQ,MAAM,CAAC;MACzBG,cAAc,CAACX,OAAO,CAACU,WAAW,CAAC;MACnCG,cAAc,CAACb,OAAO,CAACY,WAAW,CAAC;MACnCG,aAAa,CAACf,OAAO,CAACc,UAAU,CAAC;MACjCG,eAAe,CAACjB,OAAO,CAACgB,YAAY,CAAC;IAEvC;EACF,CAAC,EAAE,EAAE,CAAC;AAKV,CAAC;AAAAnB,EAAA,CAzCKD,aAAa;EAAA,QACEH,WAAW,EACXD,WAAW;AAAA;AAAAmC,EAAA,GAF1B/B,aAAa;AA4CnB,eAAeA,aAAa;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}