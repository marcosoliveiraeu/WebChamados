{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrador\\\\Documents\\\\GitHub\\\\WebChamados\\\\WebChamados\\\\React\\\\chamadosreact\\\\src\\\\components\\\\ResetPassword.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useSearchParams, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResetPassword = () => {\n  _s();\n  const [searchParams] = useSearchParams();\n  const email = searchParams.get('email');\n  const token = searchParams.get('token');\n  const [senha, setSenha] = useState('');\n  const [confirmarSenha, setconfirmarSenha] = useState('');\n  const [msg, setMsg] = useState('');\n  const [error, setErro] = useState('');\n  const navigate = useNavigate();\n  const baseURL = `${API_URL}/Usuario/ResetSenha`;\n  const ResetSenha = async () => {\n    const userData = {\n      token: token,\n      email: email,\n      newPassword: senha,\n      confirmPassword: confirmarSenha\n    };\n    try {\n      const response = await axios.post(baseURL, userData);\n      if (response.status === 200) {\n        setMsg(\"Senha alterada com sucesso\");\n      } else {\n        setErro(\"Erro ao alterar senha.\");\n      }\n    } catch (err) {\n      setErro('Erro ao alterar senha: ' + err);\n    }\n  };\n  const handlePasswordReset = () => {\n    setErro(null);\n    setMsg(null);\n    if (validaCampos()) {\n      ResetSenha();\n    }\n  };\n  const validaCampos = () => {\n    if (!senha || !confirmarSenha) {\n      setErro('Todos os campos são obrigatórios.');\n      return false;\n    }\n    if (senha.length < 5) {\n      setErro('A senha deve ter no mínimo 5 caracteres.');\n      return false;\n    }\n    if (senha !== confirmarSenha) {\n      setErro('As senhas não coincidem.');\n      return false;\n    }\n    if (!validatePassword(senha)) {\n      setErro('A senha deve ter pelo menos 5 caracteres, incluindo letras maiúsculas, minúsculas, números e caracteres especiais.');\n      return false;\n    }\n    return true;\n  };\n  const validatePassword = password => {\n    const re = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[!@#$%^&*])[A-Za-z\\d!@#$%^&*]{5,}$/;\n    return re.test(password);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Reset Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), msg && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-success\",\n      children: msg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 15\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handlePasswordReset,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"New Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          className: \"form-control\",\n          id: \"password\",\n          value: senha,\n          onChange: e => setSenha(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"confirmPassword\",\n          children: \"Confirm New Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          className: \"form-control\",\n          id: \"confirmPassword\",\n          value: confirmarSenha,\n          onChange: e => setconfirmarSenha(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_s(ResetPassword, \"DOn0IIuAoDT9fUJUldVY8y5EcNU=\", false, function () {\n  return [useSearchParams, useNavigate];\n});\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","useSearchParams","useNavigate","axios","jsxDEV","_jsxDEV","ResetPassword","_s","searchParams","email","get","token","senha","setSenha","confirmarSenha","setconfirmarSenha","msg","setMsg","error","setErro","navigate","baseURL","API_URL","ResetSenha","userData","newPassword","confirmPassword","response","post","status","err","handlePasswordReset","validaCampos","length","validatePassword","password","re","test","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","htmlFor","type","id","value","onChange","e","target","required","_c","$RefreshReg$"],"sources":["C:/Users/Administrador/Documents/GitHub/WebChamados/WebChamados/React/chamadosreact/src/components/ResetPassword.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useSearchParams, useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst ResetPassword = () => {\r\n  const [searchParams] = useSearchParams();\r\n  const email = searchParams.get('email');\r\n  const token = searchParams.get('token');\r\n  const [senha, setSenha] = useState('');\r\n  const [confirmarSenha, setconfirmarSenha] = useState('');\r\n  const [msg, setMsg] = useState('');\r\n  const [error, setErro] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const baseURL = `${API_URL}/Usuario/ResetSenha`;\r\n\r\n  const ResetSenha = async () => {\r\n    \r\n    const userData = {\r\n        token: token,\r\n        email: email,\r\n        newPassword: senha,\r\n        confirmPassword: confirmarSenha\r\n      };\r\n    \r\n\r\n    try {\r\n      const response = await axios.post(baseURL, userData);\r\n\r\n      if (response.status === 200) {        \r\n        setMsg(\"Senha alterada com sucesso\");          \r\n      }else{\r\n        setErro(\"Erro ao alterar senha.\");\r\n        \r\n      }\r\n    } catch (err) {\r\n      setErro('Erro ao alterar senha: ' + err);\r\n    }\r\n  };\r\n\r\n  const handlePasswordReset = () => {\r\n\r\n    setErro(null);\r\n    setMsg(null);\r\n\r\n    if(validaCampos()) {\r\n        ResetSenha();\r\n    }    \r\n  };\r\n\r\n  \r\n  const validaCampos = () => {\r\n    \r\n    if (!senha || !confirmarSenha ) {\r\n      setErro('Todos os campos são obrigatórios.');\r\n      return false;\r\n    }\r\n    if (senha.length < 5) {\r\n      setErro('A senha deve ter no mínimo 5 caracteres.');\r\n      return false;\r\n    }\r\n    if (senha !== confirmarSenha) {\r\n      setErro('As senhas não coincidem.');\r\n      return false;\r\n    }\r\n\r\n\r\n    if (!validatePassword(senha)) {\r\n      setErro('A senha deve ter pelo menos 5 caracteres, incluindo letras maiúsculas, minúsculas, números e caracteres especiais.');\r\n      return false;\r\n    }\r\n    \r\n    return true ;\r\n\r\n  }\r\n\r\n\r\n  const validatePassword = (password) => {\r\n    const re = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[!@#$%^&*])[A-Za-z\\d!@#$%^&*]{5,}$/;\r\n    return re.test(password);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Reset Password</h1>\r\n      {msg && <div className=\"alert alert-success\">{msg}</div>}\r\n      {error && <div className=\"alert alert-danger\">{error}</div>}\r\n      <form onSubmit={handlePasswordReset}>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"password\">New Password</label>\r\n          <input\r\n            type=\"password\"\r\n            className=\"form-control\"\r\n            id=\"password\"\r\n            value={senha}\r\n            onChange={(e) => setSenha(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"confirmPassword\">Confirm New Password</label>\r\n          <input\r\n            type=\"password\"\r\n            className=\"form-control\"\r\n            id=\"confirmPassword\"\r\n            value={confirmarSenha}\r\n            onChange={(e) => setconfirmarSenha(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary\">Reset Password</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResetPassword;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}