{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrador\\\\Documents\\\\GitHub\\\\WebChamados\\\\WebChamados\\\\React\\\\chamadosreact\\\\src\\\\components\\\\ResetPassword.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useSearchParams, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResetPassword = () => {\n  _s();\n  const [searchParams] = useSearchParams();\n  const email = searchParams.get('email');\n  const token = searchParams.get('token');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [msg, setMsg] = useState('');\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  const handlePasswordReset = async e => {\n    e.preventDefault();\n    if (password !== confirmPassword) {\n      setError('Passwords do not match');\n      return;\n    }\n\n    // Lógica para chamar a API de reset de senha\n    // Você pode substituir o código abaixo com sua lógica de axios\n    try {\n      // const response = await axios.post('/api/reset-password', { email, token, password });\n      setMsg('Password has been reset successfully');\n      navigate('/login');\n    } catch (err) {\n      setError('Error resetting password. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Reset Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), msg && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-success\",\n      children: msg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 15\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handlePasswordReset,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"New Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          className: \"form-control\",\n          id: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"confirmPassword\",\n          children: \"Confirm New Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          className: \"form-control\",\n          id: \"confirmPassword\",\n          value: confirmPassword,\n          onChange: e => setConfirmPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(ResetPassword, \"Tm0aZrVBDFkxidUrDvOi1pqazcQ=\", false, function () {\n  return [useSearchParams, useNavigate];\n});\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","useSearchParams","useNavigate","jsxDEV","_jsxDEV","ResetPassword","_s","searchParams","email","get","token","password","setPassword","confirmPassword","setConfirmPassword","msg","setMsg","error","setError","navigate","handlePasswordReset","e","preventDefault","err","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","htmlFor","type","id","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/Administrador/Documents/GitHub/WebChamados/WebChamados/React/chamadosreact/src/components/ResetPassword.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useSearchParams, useNavigate } from 'react-router-dom';\r\n\r\nconst ResetPassword = () => {\r\n  const [searchParams] = useSearchParams();\r\n  const email = searchParams.get('email');\r\n  const token = searchParams.get('token');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [msg, setMsg] = useState('');\r\n  const [error, setError] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const handlePasswordReset = async (e) => {\r\n    e.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      setError('Passwords do not match');\r\n      return;\r\n    }\r\n\r\n    // Lógica para chamar a API de reset de senha\r\n    // Você pode substituir o código abaixo com sua lógica de axios\r\n    try {\r\n      // const response = await axios.post('/api/reset-password', { email, token, password });\r\n      setMsg('Password has been reset successfully');\r\n      navigate('/login');\r\n    } catch (err) {\r\n      setError('Error resetting password. Please try again.');\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <div>\r\n      <h1>Reset Password</h1>\r\n      {msg && <div className=\"alert alert-success\">{msg}</div>}\r\n      {error && <div className=\"alert alert-danger\">{error}</div>}\r\n      <form onSubmit={handlePasswordReset}>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"password\">New Password</label>\r\n          <input\r\n            type=\"password\"\r\n            className=\"form-control\"\r\n            id=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"confirmPassword\">Confirm New Password</label>\r\n          <input\r\n            type=\"password\"\r\n            className=\"form-control\"\r\n            id=\"confirmPassword\"\r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary\">Reset Password</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResetPassword;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}