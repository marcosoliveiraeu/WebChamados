{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrador\\\\Documents\\\\GitHub\\\\WebChamados\\\\WebChamados\\\\React\\\\chamadosreact\\\\src\\\\components\\\\ResetPassword.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useSearchParams, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResetPassword = () => {\n  _s();\n  const [searchParams] = useSearchParams();\n  const email = searchParams.get('email');\n  const token = searchParams.get('token');\n  const [senha, setSenha] = useState('');\n  const [confirmarSenha, setconfirmarSenha] = useState('');\n  const [msg, setMsg] = useState('');\n  const [error, setErro] = useState('');\n  const navigate = useNavigate();\n  const ResetSenha = async e => {\n    e.preventDefault();\n\n    // Lógica para chamar a API de reset de senha\n    // Você pode substituir o código abaixo com sua lógica de axios\n    try {\n      // const response = await axios.post('/api/reset-password', { email, token, password });\n      setMsg('Password has been reset successfully');\n      navigate('/login');\n    } catch (err) {\n      setErro('Error resetting password. Please try again.');\n    }\n  };\n  const handlePasswordReset = () => {\n    setErro(null);\n    setMsg(null);\n    if (validaCampos()) {\n      ResetSenha();\n    }\n  };\n  const validaCampos = () => {\n    if (!senha || !confirmarSenha) {\n      setErro('Todos os campos são obrigatórios.');\n      return false;\n    }\n    if (senha.length < 5) {\n      setErro('A senha deve ter no mínimo 5 caracteres.');\n      return false;\n    }\n    if (senha !== confirmarSenha) {\n      setErro('As senhas não coincidem.');\n      return false;\n    }\n    if (!validatePassword(senha)) {\n      setErro('A senha deve ter pelo menos 5 caracteres, incluindo letras maiúsculas, minúsculas, números e caracteres especiais.');\n      return false;\n    }\n    return true;\n  };\n  const validatePassword = password => {\n    const re = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[!@#$%^&*])[A-Za-z\\d!@#$%^&*]{5,}$/;\n    return re.test(password);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Reset Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), msg && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-success\",\n      children: msg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 15\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handlePasswordReset,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"New Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          className: \"form-control\",\n          id: \"password\",\n          value: senha,\n          onChange: e => setSenha(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"confirmPassword\",\n          children: \"Confirm New Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          className: \"form-control\",\n          id: \"confirmPassword\",\n          value: confirmarSenha,\n          onChange: e => setconfirmarSenha(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(ResetPassword, \"DOn0IIuAoDT9fUJUldVY8y5EcNU=\", false, function () {\n  return [useSearchParams, useNavigate];\n});\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","useSearchParams","useNavigate","jsxDEV","_jsxDEV","ResetPassword","_s","searchParams","email","get","token","senha","setSenha","confirmarSenha","setconfirmarSenha","msg","setMsg","error","setErro","navigate","ResetSenha","e","preventDefault","err","handlePasswordReset","validaCampos","length","validatePassword","password","re","test","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","htmlFor","type","id","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/Administrador/Documents/GitHub/WebChamados/WebChamados/React/chamadosreact/src/components/ResetPassword.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useSearchParams, useNavigate } from 'react-router-dom';\r\n\r\nconst ResetPassword = () => {\r\n  const [searchParams] = useSearchParams();\r\n  const email = searchParams.get('email');\r\n  const token = searchParams.get('token');\r\n  const [senha, setSenha] = useState('');\r\n  const [confirmarSenha, setconfirmarSenha] = useState('');\r\n  const [msg, setMsg] = useState('');\r\n  const [error, setErro] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const ResetSenha = async (e) => {\r\n    e.preventDefault();\r\n    \r\n\r\n    // Lógica para chamar a API de reset de senha\r\n    // Você pode substituir o código abaixo com sua lógica de axios\r\n    try {\r\n      // const response = await axios.post('/api/reset-password', { email, token, password });\r\n      setMsg('Password has been reset successfully');\r\n      navigate('/login');\r\n    } catch (err) {\r\n      setErro('Error resetting password. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handlePasswordReset = () => {\r\n\r\n    setErro(null);\r\n    setMsg(null);\r\n\r\n    if(validaCampos()) {\r\n        ResetSenha();\r\n    }    \r\n  };\r\n\r\n  \r\n  const validaCampos = () => {\r\n    \r\n    if (!senha || !confirmarSenha ) {\r\n      setErro('Todos os campos são obrigatórios.');\r\n      return false;\r\n    }\r\n    if (senha.length < 5) {\r\n      setErro('A senha deve ter no mínimo 5 caracteres.');\r\n      return false;\r\n    }\r\n    if (senha !== confirmarSenha) {\r\n      setErro('As senhas não coincidem.');\r\n      return false;\r\n    }\r\n\r\n\r\n    if (!validatePassword(senha)) {\r\n      setErro('A senha deve ter pelo menos 5 caracteres, incluindo letras maiúsculas, minúsculas, números e caracteres especiais.');\r\n      return false;\r\n    }\r\n    \r\n    return true ;\r\n\r\n  }\r\n\r\n\r\n  const validatePassword = (password) => {\r\n    const re = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[!@#$%^&*])[A-Za-z\\d!@#$%^&*]{5,}$/;\r\n    return re.test(password);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Reset Password</h1>\r\n      {msg && <div className=\"alert alert-success\">{msg}</div>}\r\n      {error && <div className=\"alert alert-danger\">{error}</div>}\r\n      <form onSubmit={handlePasswordReset}>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"password\">New Password</label>\r\n          <input\r\n            type=\"password\"\r\n            className=\"form-control\"\r\n            id=\"password\"\r\n            value={senha}\r\n            onChange={(e) => setSenha(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"confirmPassword\">Confirm New Password</label>\r\n          <input\r\n            type=\"password\"\r\n            className=\"form-control\"\r\n            id=\"confirmPassword\"\r\n            value={confirmarSenha}\r\n            onChange={(e) => setconfirmarSenha(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary\">Reset Password</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResetPassword;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}